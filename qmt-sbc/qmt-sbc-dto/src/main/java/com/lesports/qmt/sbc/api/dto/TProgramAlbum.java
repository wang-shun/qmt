/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.lesports.qmt.sbc.api.dto;

import org.apache.thrift.EncodingUtils;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;
import org.apache.thrift.scheme.TupleScheme;

import javax.annotation.Generated;
import java.util.*;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2017-2-14")
public class TProgramAlbum implements org.apache.thrift.TBase<TProgramAlbum, TProgramAlbum._Fields>, java.io.Serializable, Cloneable, Comparable<TProgramAlbum> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TProgramAlbum");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField LATEST_EPISODE_FIELD_DESC = new org.apache.thrift.protocol.TField("latestEpisode", org.apache.thrift.protocol.TType.STRUCT, (short)3);
  private static final org.apache.thrift.protocol.TField LOGO_FIELD_DESC = new org.apache.thrift.protocol.TField("logo", org.apache.thrift.protocol.TType.MAP, (short)4);
  private static final org.apache.thrift.protocol.TField LATEST_VIDEO_FIELD_DESC = new org.apache.thrift.protocol.TField("latestVideo", org.apache.thrift.protocol.TType.STRUCT, (short)5);
  private static final org.apache.thrift.protocol.TField RECOMMEND_FIELD_DESC = new org.apache.thrift.protocol.TField("recommend", org.apache.thrift.protocol.TType.BOOL, (short)6);
  private static final org.apache.thrift.protocol.TField RECOMMEND_ORDER_FIELD_DESC = new org.apache.thrift.protocol.TField("recommendOrder", org.apache.thrift.protocol.TType.I32, (short)7);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new TProgramAlbumStandardSchemeFactory());
    schemes.put(TupleScheme.class, new TProgramAlbumTupleSchemeFactory());
  }

  private long id; // required
  private String name; // optional
  private com.lesports.qmt.sbc.api.dto.TComboEpisode latestEpisode; // optional
  private Map<String,String> logo; // optional
  private com.lesports.qmt.sbc.api.dto.TVideo latestVideo; // optional
  private boolean recommend; // optional
  private int recommendOrder; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    NAME((short)2, "name"),
    LATEST_EPISODE((short)3, "latestEpisode"),
    LOGO((short)4, "logo"),
    LATEST_VIDEO((short)5, "latestVideo"),
    RECOMMEND((short)6, "recommend"),
    RECOMMEND_ORDER((short)7, "recommendOrder");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // NAME
          return NAME;
        case 3: // LATEST_EPISODE
          return LATEST_EPISODE;
        case 4: // LOGO
          return LOGO;
        case 5: // LATEST_VIDEO
          return LATEST_VIDEO;
        case 6: // RECOMMEND
          return RECOMMEND;
        case 7: // RECOMMEND_ORDER
          return RECOMMEND_ORDER;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __RECOMMEND_ISSET_ID = 1;
  private static final int __RECOMMENDORDER_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.NAME,_Fields.LATEST_EPISODE,_Fields.LOGO,_Fields.LATEST_VIDEO,_Fields.RECOMMEND,_Fields.RECOMMEND_ORDER};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LATEST_EPISODE, new org.apache.thrift.meta_data.FieldMetaData("latestEpisode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.lesports.qmt.sbc.api.dto.TComboEpisode.class)));
    tmpMap.put(_Fields.LOGO, new org.apache.thrift.meta_data.FieldMetaData("logo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.LATEST_VIDEO, new org.apache.thrift.meta_data.FieldMetaData("latestVideo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.lesports.qmt.sbc.api.dto.TVideo.class)));
    tmpMap.put(_Fields.RECOMMEND, new org.apache.thrift.meta_data.FieldMetaData("recommend", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.RECOMMEND_ORDER, new org.apache.thrift.meta_data.FieldMetaData("recommendOrder", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TProgramAlbum.class, metaDataMap);
  }

  public TProgramAlbum() {
  }

  public TProgramAlbum(
    long id)
  {
    this();
    this.id = id;
    setIdIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TProgramAlbum(TProgramAlbum other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    if (other.isSetName()) {
      this.name = other.name;
    }
    if (other.isSetLatestEpisode()) {
      this.latestEpisode = new com.lesports.qmt.sbc.api.dto.TComboEpisode(other.latestEpisode);
    }
    if (other.isSetLogo()) {
      Map<String,String> __this__logo = new HashMap<String,String>(other.logo);
      this.logo = __this__logo;
    }
    if (other.isSetLatestVideo()) {
      this.latestVideo = new com.lesports.qmt.sbc.api.dto.TVideo(other.latestVideo);
    }
    this.recommend = other.recommend;
    this.recommendOrder = other.recommendOrder;
  }

  public TProgramAlbum deepCopy() {
    return new TProgramAlbum(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    this.name = null;
    this.latestEpisode = null;
    this.logo = null;
    this.latestVideo = null;
    setRecommendIsSet(false);
    this.recommend = false;
    setRecommendOrderIsSet(false);
    this.recommendOrder = 0;
  }

  public long getId() {
    return this.id;
  }

  public void setId(long id) {
    this.id = id;
    setIdIsSet(true);
  }

  public void unsetId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public String getName() {
    return this.name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  public com.lesports.qmt.sbc.api.dto.TComboEpisode getLatestEpisode() {
    return this.latestEpisode;
  }

  public void setLatestEpisode(com.lesports.qmt.sbc.api.dto.TComboEpisode latestEpisode) {
    this.latestEpisode = latestEpisode;
  }

  public void unsetLatestEpisode() {
    this.latestEpisode = null;
  }

  /** Returns true if field latestEpisode is set (has been assigned a value) and false otherwise */
  public boolean isSetLatestEpisode() {
    return this.latestEpisode != null;
  }

  public void setLatestEpisodeIsSet(boolean value) {
    if (!value) {
      this.latestEpisode = null;
    }
  }

  public int getLogoSize() {
    return (this.logo == null) ? 0 : this.logo.size();
  }

  public void putToLogo(String key, String val) {
    if (this.logo == null) {
      this.logo = new HashMap<String,String>();
    }
    this.logo.put(key, val);
  }

  public Map<String,String> getLogo() {
    return this.logo;
  }

  public void setLogo(Map<String,String> logo) {
    this.logo = logo;
  }

  public void unsetLogo() {
    this.logo = null;
  }

  /** Returns true if field logo is set (has been assigned a value) and false otherwise */
  public boolean isSetLogo() {
    return this.logo != null;
  }

  public void setLogoIsSet(boolean value) {
    if (!value) {
      this.logo = null;
    }
  }

  public com.lesports.qmt.sbc.api.dto.TVideo getLatestVideo() {
    return this.latestVideo;
  }

  public void setLatestVideo(com.lesports.qmt.sbc.api.dto.TVideo latestVideo) {
    this.latestVideo = latestVideo;
  }

  public void unsetLatestVideo() {
    this.latestVideo = null;
  }

  /** Returns true if field latestVideo is set (has been assigned a value) and false otherwise */
  public boolean isSetLatestVideo() {
    return this.latestVideo != null;
  }

  public void setLatestVideoIsSet(boolean value) {
    if (!value) {
      this.latestVideo = null;
    }
  }

  public boolean isRecommend() {
    return this.recommend;
  }

  public void setRecommend(boolean recommend) {
    this.recommend = recommend;
    setRecommendIsSet(true);
  }

  public void unsetRecommend() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RECOMMEND_ISSET_ID);
  }

  /** Returns true if field recommend is set (has been assigned a value) and false otherwise */
  public boolean isSetRecommend() {
    return EncodingUtils.testBit(__isset_bitfield, __RECOMMEND_ISSET_ID);
  }

  public void setRecommendIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RECOMMEND_ISSET_ID, value);
  }

  public int getRecommendOrder() {
    return this.recommendOrder;
  }

  public void setRecommendOrder(int recommendOrder) {
    this.recommendOrder = recommendOrder;
    setRecommendOrderIsSet(true);
  }

  public void unsetRecommendOrder() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RECOMMENDORDER_ISSET_ID);
  }

  /** Returns true if field recommendOrder is set (has been assigned a value) and false otherwise */
  public boolean isSetRecommendOrder() {
    return EncodingUtils.testBit(__isset_bitfield, __RECOMMENDORDER_ISSET_ID);
  }

  public void setRecommendOrderIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RECOMMENDORDER_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Long)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((String)value);
      }
      break;

    case LATEST_EPISODE:
      if (value == null) {
        unsetLatestEpisode();
      } else {
        setLatestEpisode((com.lesports.qmt.sbc.api.dto.TComboEpisode)value);
      }
      break;

    case LOGO:
      if (value == null) {
        unsetLogo();
      } else {
        setLogo((Map<String,String>)value);
      }
      break;

    case LATEST_VIDEO:
      if (value == null) {
        unsetLatestVideo();
      } else {
        setLatestVideo((com.lesports.qmt.sbc.api.dto.TVideo)value);
      }
      break;

    case RECOMMEND:
      if (value == null) {
        unsetRecommend();
      } else {
        setRecommend((Boolean)value);
      }
      break;

    case RECOMMEND_ORDER:
      if (value == null) {
        unsetRecommendOrder();
      } else {
        setRecommendOrder((Integer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return Long.valueOf(getId());

    case NAME:
      return getName();

    case LATEST_EPISODE:
      return getLatestEpisode();

    case LOGO:
      return getLogo();

    case LATEST_VIDEO:
      return getLatestVideo();

    case RECOMMEND:
      return Boolean.valueOf(isRecommend());

    case RECOMMEND_ORDER:
      return Integer.valueOf(getRecommendOrder());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case NAME:
      return isSetName();
    case LATEST_EPISODE:
      return isSetLatestEpisode();
    case LOGO:
      return isSetLogo();
    case LATEST_VIDEO:
      return isSetLatestVideo();
    case RECOMMEND:
      return isSetRecommend();
    case RECOMMEND_ORDER:
      return isSetRecommendOrder();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof TProgramAlbum)
      return this.equals((TProgramAlbum)that);
    return false;
  }

  public boolean equals(TProgramAlbum that) {
    if (that == null)
      return false;

    boolean this_present_id = true;
    boolean that_present_id = true;
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_latestEpisode = true && this.isSetLatestEpisode();
    boolean that_present_latestEpisode = true && that.isSetLatestEpisode();
    if (this_present_latestEpisode || that_present_latestEpisode) {
      if (!(this_present_latestEpisode && that_present_latestEpisode))
        return false;
      if (!this.latestEpisode.equals(that.latestEpisode))
        return false;
    }

    boolean this_present_logo = true && this.isSetLogo();
    boolean that_present_logo = true && that.isSetLogo();
    if (this_present_logo || that_present_logo) {
      if (!(this_present_logo && that_present_logo))
        return false;
      if (!this.logo.equals(that.logo))
        return false;
    }

    boolean this_present_latestVideo = true && this.isSetLatestVideo();
    boolean that_present_latestVideo = true && that.isSetLatestVideo();
    if (this_present_latestVideo || that_present_latestVideo) {
      if (!(this_present_latestVideo && that_present_latestVideo))
        return false;
      if (!this.latestVideo.equals(that.latestVideo))
        return false;
    }

    boolean this_present_recommend = true && this.isSetRecommend();
    boolean that_present_recommend = true && that.isSetRecommend();
    if (this_present_recommend || that_present_recommend) {
      if (!(this_present_recommend && that_present_recommend))
        return false;
      if (this.recommend != that.recommend)
        return false;
    }

    boolean this_present_recommendOrder = true && this.isSetRecommendOrder();
    boolean that_present_recommendOrder = true && that.isSetRecommendOrder();
    if (this_present_recommendOrder || that_present_recommendOrder) {
      if (!(this_present_recommendOrder && that_present_recommendOrder))
        return false;
      if (this.recommendOrder != that.recommendOrder)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_id = true;
    list.add(present_id);
    if (present_id)
      list.add(id);

    boolean present_name = true && (isSetName());
    list.add(present_name);
    if (present_name)
      list.add(name);

    boolean present_latestEpisode = true && (isSetLatestEpisode());
    list.add(present_latestEpisode);
    if (present_latestEpisode)
      list.add(latestEpisode);

    boolean present_logo = true && (isSetLogo());
    list.add(present_logo);
    if (present_logo)
      list.add(logo);

    boolean present_latestVideo = true && (isSetLatestVideo());
    list.add(present_latestVideo);
    if (present_latestVideo)
      list.add(latestVideo);

    boolean present_recommend = true && (isSetRecommend());
    list.add(present_recommend);
    if (present_recommend)
      list.add(recommend);

    boolean present_recommendOrder = true && (isSetRecommendOrder());
    list.add(present_recommendOrder);
    if (present_recommendOrder)
      list.add(recommendOrder);

    return list.hashCode();
  }

  @Override
  public int compareTo(TProgramAlbum other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetName()).compareTo(other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLatestEpisode()).compareTo(other.isSetLatestEpisode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLatestEpisode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.latestEpisode, other.latestEpisode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLogo()).compareTo(other.isSetLogo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLogo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.logo, other.logo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLatestVideo()).compareTo(other.isSetLatestVideo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLatestVideo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.latestVideo, other.latestVideo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRecommend()).compareTo(other.isSetRecommend());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecommend()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recommend, other.recommend);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRecommendOrder()).compareTo(other.isSetRecommendOrder());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRecommendOrder()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.recommendOrder, other.recommendOrder);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("TProgramAlbum(");
    boolean first = true;

    sb.append("id:");
    sb.append(this.id);
    first = false;
    if (isSetName()) {
      if (!first) sb.append(", ");
      sb.append("name:");
      if (this.name == null) {
        sb.append("null");
      } else {
        sb.append(this.name);
      }
      first = false;
    }
    if (isSetLatestEpisode()) {
      if (!first) sb.append(", ");
      sb.append("latestEpisode:");
      if (this.latestEpisode == null) {
        sb.append("null");
      } else {
        sb.append(this.latestEpisode);
      }
      first = false;
    }
    if (isSetLogo()) {
      if (!first) sb.append(", ");
      sb.append("logo:");
      if (this.logo == null) {
        sb.append("null");
      } else {
        sb.append(this.logo);
      }
      first = false;
    }
    if (isSetLatestVideo()) {
      if (!first) sb.append(", ");
      sb.append("latestVideo:");
      if (this.latestVideo == null) {
        sb.append("null");
      } else {
        sb.append(this.latestVideo);
      }
      first = false;
    }
    if (isSetRecommend()) {
      if (!first) sb.append(", ");
      sb.append("recommend:");
      sb.append(this.recommend);
      first = false;
    }
    if (isSetRecommendOrder()) {
      if (!first) sb.append(", ");
      sb.append("recommendOrder:");
      sb.append(this.recommendOrder);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (latestEpisode != null) {
      latestEpisode.validate();
    }
    if (latestVideo != null) {
      latestVideo.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TProgramAlbumStandardSchemeFactory implements SchemeFactory {
    public TProgramAlbumStandardScheme getScheme() {
      return new TProgramAlbumStandardScheme();
    }
  }

  private static class TProgramAlbumStandardScheme extends StandardScheme<TProgramAlbum> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TProgramAlbum struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.id = iprot.readI64();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // LATEST_EPISODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.latestEpisode = new com.lesports.qmt.sbc.api.dto.TComboEpisode();
              struct.latestEpisode.read(iprot);
              struct.setLatestEpisodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // LOGO
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map0 = iprot.readMapBegin();
                struct.logo = new HashMap<String,String>(2*_map0.size);
                String _key1;
                String _val2;
                for (int _i3 = 0; _i3 < _map0.size; ++_i3)
                {
                  _key1 = iprot.readString();
                  _val2 = iprot.readString();
                  struct.logo.put(_key1, _val2);
                }
                iprot.readMapEnd();
              }
              struct.setLogoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // LATEST_VIDEO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.latestVideo = new com.lesports.qmt.sbc.api.dto.TVideo();
              struct.latestVideo.read(iprot);
              struct.setLatestVideoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // RECOMMEND
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.recommend = iprot.readBool();
              struct.setRecommendIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // RECOMMEND_ORDER
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.recommendOrder = iprot.readI32();
              struct.setRecommendOrderIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TProgramAlbum struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ID_FIELD_DESC);
      oprot.writeI64(struct.id);
      oprot.writeFieldEnd();
      if (struct.name != null) {
        if (struct.isSetName()) {
          oprot.writeFieldBegin(NAME_FIELD_DESC);
          oprot.writeString(struct.name);
          oprot.writeFieldEnd();
        }
      }
      if (struct.latestEpisode != null) {
        if (struct.isSetLatestEpisode()) {
          oprot.writeFieldBegin(LATEST_EPISODE_FIELD_DESC);
          struct.latestEpisode.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.logo != null) {
        if (struct.isSetLogo()) {
          oprot.writeFieldBegin(LOGO_FIELD_DESC);
          {
            oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, struct.logo.size()));
            for (Map.Entry<String, String> _iter4 : struct.logo.entrySet())
            {
              oprot.writeString(_iter4.getKey());
              oprot.writeString(_iter4.getValue());
            }
            oprot.writeMapEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.latestVideo != null) {
        if (struct.isSetLatestVideo()) {
          oprot.writeFieldBegin(LATEST_VIDEO_FIELD_DESC);
          struct.latestVideo.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetRecommend()) {
        oprot.writeFieldBegin(RECOMMEND_FIELD_DESC);
        oprot.writeBool(struct.recommend);
        oprot.writeFieldEnd();
      }
      if (struct.isSetRecommendOrder()) {
        oprot.writeFieldBegin(RECOMMEND_ORDER_FIELD_DESC);
        oprot.writeI32(struct.recommendOrder);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TProgramAlbumTupleSchemeFactory implements SchemeFactory {
    public TProgramAlbumTupleScheme getScheme() {
      return new TProgramAlbumTupleScheme();
    }
  }

  private static class TProgramAlbumTupleScheme extends TupleScheme<TProgramAlbum> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TProgramAlbum struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetName()) {
        optionals.set(1);
      }
      if (struct.isSetLatestEpisode()) {
        optionals.set(2);
      }
      if (struct.isSetLogo()) {
        optionals.set(3);
      }
      if (struct.isSetLatestVideo()) {
        optionals.set(4);
      }
      if (struct.isSetRecommend()) {
        optionals.set(5);
      }
      if (struct.isSetRecommendOrder()) {
        optionals.set(6);
      }
      oprot.writeBitSet(optionals, 7);
      if (struct.isSetId()) {
        oprot.writeI64(struct.id);
      }
      if (struct.isSetName()) {
        oprot.writeString(struct.name);
      }
      if (struct.isSetLatestEpisode()) {
        struct.latestEpisode.write(oprot);
      }
      if (struct.isSetLogo()) {
        {
          oprot.writeI32(struct.logo.size());
          for (Map.Entry<String, String> _iter5 : struct.logo.entrySet())
          {
            oprot.writeString(_iter5.getKey());
            oprot.writeString(_iter5.getValue());
          }
        }
      }
      if (struct.isSetLatestVideo()) {
        struct.latestVideo.write(oprot);
      }
      if (struct.isSetRecommend()) {
        oprot.writeBool(struct.recommend);
      }
      if (struct.isSetRecommendOrder()) {
        oprot.writeI32(struct.recommendOrder);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TProgramAlbum struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(7);
      if (incoming.get(0)) {
        struct.id = iprot.readI64();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.name = iprot.readString();
        struct.setNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.latestEpisode = new com.lesports.qmt.sbc.api.dto.TComboEpisode();
        struct.latestEpisode.read(iprot);
        struct.setLatestEpisodeIsSet(true);
      }
      if (incoming.get(3)) {
        {
          org.apache.thrift.protocol.TMap _map6 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.logo = new HashMap<String,String>(2*_map6.size);
          String _key7;
          String _val8;
          for (int _i9 = 0; _i9 < _map6.size; ++_i9)
          {
            _key7 = iprot.readString();
            _val8 = iprot.readString();
            struct.logo.put(_key7, _val8);
          }
        }
        struct.setLogoIsSet(true);
      }
      if (incoming.get(4)) {
        struct.latestVideo = new com.lesports.qmt.sbc.api.dto.TVideo();
        struct.latestVideo.read(iprot);
        struct.setLatestVideoIsSet(true);
      }
      if (incoming.get(5)) {
        struct.recommend = iprot.readBool();
        struct.setRecommendIsSet(true);
      }
      if (incoming.get(6)) {
        struct.recommendOrder = iprot.readI32();
        struct.setRecommendOrderIsSet(true);
      }
    }
  }

}

